@mixin respond_to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $min-width: map-get($breakpoints, $breakpoint);

    @if ($breakpoint == 'xs') {
      @content;
    } @else {
      @media (min-width: #{$min-width}) {
        @content;
      }
    }
  } @else {
    @warn "The breakpoint is not supported";
  }
}

@mixin generate_css($prefix, $properties, $default: '', $default-pseudo: '') {
  @each $breakpoint, $breakpoint-size in $breakpoints {
    $check: if($breakpoint == xs, '', #{$breakpoint}\:);

    @include respond_to($breakpoint) {
      @each $property-key, $property-value in $properties {
        $selector: '.#{$check}#{$prefix}-#{$property-key}#{$default-pseudo}';

        @each $pseudo-class, $pseudo-selector in $pseudos {
          $selector: '#{$selector}, .#{$check}#{$pseudo-class}\\:#{$prefix}-#{$property-key}#{$default-pseudo}#{$pseudo-selector}';
        }

        #{$selector} {
          @if type-of($property-value) == map {
            @each $key, $value in $property-value {
              #{$key}: $value;
            }
          } @else {
            @if type-of($default) == list {
              @each $key in $default {
                #{$key}: $property-value;
              }
            } @else {
              #{$default}: $property-value;
            }
          }
        }
      }
    }
  }
}
